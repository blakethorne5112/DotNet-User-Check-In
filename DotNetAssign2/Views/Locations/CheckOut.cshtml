@model DotNetAssign2.Models.Users

@{
    ViewData["Title"] = "Check Out";
}

<h1>Check Out</h1>
@*
<h4>Users</h4> *@
<hr />
<div class="box">
    <h1 style="text-align:center">Check Out</h1>
    <hr />
    <div class="row justify-content-center">
        <div class="col-md-6">
            <form asp-action="CheckOut">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Phone" class="control-label"></label>
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <p class="text-danger">@TempData["ErrorMessage"]</p>
                    }

                    @if (Model != null && Model.Phone != null)
                    {
                        <input asp-for="Phone" class="form-control" value="@Model.Phone" />
                    }
                    else
                    {
                        <input asp-for="Phone" class="form-control" />
                    }
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>
                <div class="form-group submit-group d-grid gap-2">
                    <input type="submit" value="Check Out" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    /* Custom styles for the box */
    .box {
        background-color: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        padding: 20px;
        margin: 20px auto;
        width: 50%;
    }

    .submit-group {
        margin-top: 20px;
        /* Add padding above submit button */
    }
</style>

@* <div>
    <a asp-action="Index">Back to List</a>
</div> *@

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}